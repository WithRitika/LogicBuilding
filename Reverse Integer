Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

Solution:
/**
 * @param {number} x
 * @return {number}
 */
var reverse = function(x) {
        const reverseString = Array.from(x.toString()).reverse().join('');
      if(x < 0) {
          var reverseNum =parseInt('-'.concat(reverseString.replace(/-/,'')),10);
      }
         else {
            reverseNum = parseInt(Array.from(x.toString()).reverse().join(''),10);
      } 
    if((Math.pow(-2, 31) <= reverseNum)  &&(reverseNum <= (Math.pow(2, 31)-1))) return reverseNum;
    else return 0;
};
